buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'LGH'
version = '0.9.0'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	
	// JSONObject 중복 방지
	testImplementation.exclude group: 'com.vaadin.external.google', module: 'android-json'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok'
	implementation 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// === QueryDsl 시작 ===

	// == 스프링 부트 3.0 이상 ==
	//Querydsl 의존성 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"

	//java.lang.NoClassDefFoundError 대응을 위해 추가
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

	// === QueryDsl 끝 ===

	// 스프링 시큐리티
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// ModelMapper
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.4.2'

	// JSON
	implementation group: 'org.json', name: 'json', version: '20230227'

	// WebClient
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// JUnit5
	testImplementation('org.junit.platform:junit-platform-launcher:1.9.2')
	testImplementation('org.junit.jupiter:junit-jupiter:5.9.2')

	// Jackson의 LocalDateTime 호환성 추가
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

	// thymeleaf layout
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

	// ConfigurationProperties 어노테이션
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
}
tasks.named('test') {
	useJUnitPlatform()
}
// Querydsl 설정부
def generated = '$buildDir/generated/querydsl'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
	main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file(generated)
}